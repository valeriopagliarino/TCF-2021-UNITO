<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1644px" height="1134px" viewBox="-0.5 -0.5 1644 1134" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-03-12T11:32:11.052Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Safari/605.1.15&quot; etag=&quot;8hpUy11lr6mJgsuYgB02&quot; version=&quot;17.1.2&quot; type=&quot;google&quot; pages=&quot;4&quot;&gt;&lt;diagram id=&quot;vBFsP4h9M5yKV_NE5Kxc&quot; name=&quot;Factory&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=&quot;vieK_bdEQ-UCbToWxN6B&quot; name=&quot;Visitor&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=&quot;MM7qxDat4EIJOC6cT_nP&quot; name=&quot;Gui &amp;amp; minor classes&quot;&gt;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&lt;/diagram&gt;&lt;diagram id=&quot;CQHobEE1jaM-JD6EtMFd&quot; name=&quot;A2 format&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-139-361-447-304-0"><rect x="139" y="361" width="447" height="304"/></clipPath><clipPath id="mx-clip-139-673-447-462-0"><rect x="139" y="673" width="447" height="462"/></clipPath><clipPath id="mx-clip-1269-124-235-84-0"><rect x="1269" y="124" width="235" height="84"/></clipPath><clipPath id="mx-clip-1269-216-235-112-0"><rect x="1269" y="216" width="235" height="112"/></clipPath><clipPath id="mx-clip-598-165-562-114-0"><rect x="598" y="165" width="562" height="114"/></clipPath><clipPath id="mx-clip-1179-510-362-84-0"><rect x="1179" y="510" width="362" height="84"/></clipPath><clipPath id="mx-clip-1179-594-362-192-0"><rect x="1179" y="594" width="362" height="192"/></clipPath><clipPath id="mx-clip-796-515-357-84-0"><rect x="796" y="515" width="357" height="84"/></clipPath><clipPath id="mx-clip-1179-849-362-84-0"><rect x="1179" y="849" width="362" height="84"/></clipPath><clipPath id="mx-clip-1179-999-357-84-0"><rect x="1179" y="999" width="357" height="84"/></clipPath><clipPath id="mx-clip-809-699-292-80-0"><rect x="809" y="699" width="292" height="80"/></clipPath><clipPath id="mx-clip-34-37-312-34-0"><rect x="34" y="37" width="312" height="34"/></clipPath><clipPath id="mx-clip-34-79-312-42-0"><rect x="34" y="79" width="312" height="42"/></clipPath><clipPath id="mx-clip-809-779-292-312-0"><rect x="809" y="779" width="292" height="312"/></clipPath></defs><g><path d="M 135 356 L 135 330 L 590 330 L 590 356" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 135 356 L 135 1130 L 590 1130 L 590 356" fill="#ffffff" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 135 356 L 590 356" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="362" y="347.5">Class: ElossMonteCarlo</text></g><rect x="135" y="356" width="455" height="304" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-139-361-447-304-0)" font-size="12px"><text x="140.5" y="373.5">                                                           Attributes</text><text x="140.5" y="387.5">- geant4: QProcess*</text><text x="140.5" y="401.5">- env: QProcessEnvironment</text><text x="140.5" y="415.5">- calorimeter: Calorimeter*</text><text x="140.5" y="429.5">- simLog: QString</text><text x="140.5" y="443.5">- textOutput: QString</text><text x="140.5" y="457.5">- rootOutput: QString</text><text x="140.5" y="471.5">- grapOutput: QString</text><text x="140.5" y="485.5">- cOut: TCanvas*</text><text x="140.5" y="499.5">- hOut: TH1D*</text><text x="140.5" y="513.5">- nEvents: int</text><text x="140.5" y="527.5">- boxX: double</text><text x="140.5" y="541.5">- boxXY: double</text><text x="140.5" y="555.5">- maxStep: double</text><text x="140.5" y="569.5">- printProgress: unsigned int</text><text x="140.5" y="583.5">- verbosity: signed int</text><text x="140.5" y="597.5">- printMaterials: bool</text><text x="140.5" y="611.5">- energyMeanMeV: double</text><text x="140.5" y="625.5">- energySigmaMeV: double</text><text x="140.5" y="639.5">- g4ion: G4ion</text><text x="140.5" y="653.5">- beamFWHM: double</text></g><path d="M 135 664 L 590 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="135" y="668" width="455" height="462" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-139-673-447-462-0)" font-size="12px"><text x="140.5" y="685.5">                                                          Operations</text><text x="140.5" y="699.5">- processOutput(): void</text><text x="140.5" y="713.5">+ ElossMonteCarlo()</text><text x="140.5" y="727.5">+ ~ElossMonteCarlo()</text><text x="140.5" y="741.5">+ runMacro(macro: QString): void</text><text x="140.5" y="755.5">+ parseOutput(): QString</text><text x="140.5" y="769.5">+ const getGeant4(): QProcess*</text><text x="140.5" y="783.5">+ const getSimLog(): QString*</text><text x="140.5" y="797.5">+ synthetizeMacro(): QString</text><text x="140.5" y="811.5">+ const getCalorimeter(): Calorimeter*</text><text x="140.5" y="825.5">+ const getNEvents(): int</text><text x="140.5" y="839.5">+ setNEvents(value: int): void</text><text x="140.5" y="853.5">+ const getBoxX(): double</text><text x="140.5" y="867.5">+ const getBoxYZ(): double</text><text x="140.5" y="881.5">+ setBoxYZ(value: double): void</text><text x="140.5" y="895.5">+ const getMaxStep(): double</text><text x="140.5" y="909.5">+ setMaxStep(value: double): void</text><text x="140.5" y="923.5">+ const getPrintProgress(): unsigned int</text><text x="140.5" y="937.5">+ setPrintProgress(value: unsigned int): void</text><text x="140.5" y="951.5">+ const getVerbosity(): signed int</text><text x="140.5" y="965.5">+ setVerbosity(value: signed int): void</text><text x="140.5" y="979.5">+ const getPrintMaterials(): bool</text><text x="140.5" y="993.5">+ setPrintMaterials(value: bool): void</text><text x="140.5" y="1007.5">+ const getEnergyMeanMeV(): double</text><text x="140.5" y="1021.5">+ setEnergyMeanMeV(value: double): void</text><text x="140.5" y="1035.5">+ const getEnergySigmaMeV(): double</text><text x="140.5" y="1049.5">+ setEnergySigmaMeV(value: double): void</text><text x="140.5" y="1063.5">+ const getBeamFWHM(): double</text><text x="140.5" y="1077.5">+ setBeamFWHM(value: double): void</text><text x="140.5" y="1091.5">+ const getG4ion(): G4ion</text><text x="140.5" y="1105.5">+ setG4ion(&amp;value: const G4ion): void</text><text x="140.5" y="1119.5">+ clearModel(): void</text></g><path d="M 1265 119 L 1265 93 L 1508 93 L 1508 119" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1265 119 L 1265 323 L 1508 323 L 1508 119" fill="#ffffff" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1265 119 L 1508 119" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1386" y="110.5">Class: DetectorModel</text></g><rect x="1265" y="119" width="243" height="84" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1269-124-235-84-0)" font-size="12px"><text x="1270.5" y="136.5">                           Attributes</text><text x="1270.5" y="150.5">- xVolume, yVolume, zVolume: double</text><text x="1270.5" y="164.5">- xOffset, yOffset, zOffset: double</text><text x="1270.5" y="178.5">- layers: std::vector&lt;Absorber*&gt;</text><text x="1270.5" y="192.5">- synthesisCache: QString</text></g><path d="M 1265 207 L 1508 207" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1265" y="211" width="243" height="112" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1269-216-235-112-0)" font-size="12px"><text x="1270.5" y="228.5">                          Operations</text><text x="1270.5" y="242.5">+ DetectorModel()</text><text x="1270.5" y="256.5">+ ~DetectorModel()</text><text x="1270.5" y="270.5">+ addLayer(layer: Absorber*): void</text><text x="1270.5" y="284.5">+ removeLayer(index: int): void</text><text x="1270.5" y="298.5">+ clear(): void</text><text x="1270.5" y="312.5">+ modelSynthesis(): QString</text></g><path d="M 594 160 L 594 134 L 1164 134 L 1164 160" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 594 160 L 594 274 L 1164 274 L 1164 160" fill="#ffffff" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 594 160 L 1164 160" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="878.5" y="151.5">Class: Calorimeter</text></g><rect x="594" y="160" width="570" height="114" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-598-165-562-114-0)" font-size="12px"><text x="599.5" y="177.5">                                                                         Operations</text><text x="599.5" y="191.5">+ buildBeamDeliveryPMT(D0mm: double, TicknessMm: double, *mat: Absorber, &amp;zeroRef: double): void</text><text x="599.5" y="205.5">+ buildCalorimeterWall(D1mm: double, TicknessMm: double, *mat: Absorber, &amp;zeroRef: double): void</text><text x="599.5" y="219.5">+ buildSelaedNacelWall(TicknessMm: double, *mat: Absorber, &amp;zeroRef: double): void</text><text x="599.5" y="233.5">+ buildCalorimeterAbso(TicknessMm: double, *mat: Absorber, &amp;zeroRef: double): void</text><text x="599.5" y="247.5">+ buildScintillatorXtl(D3mm: double, TicknessMm: double, *mat: Absorber, &amp;zeroRef: double, nx: int,</text><text x="599.5" y="261.5">                                 ny: int, sizeYZ: double): void</text></g><path d="M 1168.75 206.85 L 1245.13 206.85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1258.13 206.85 L 1245.13 213.35 L 1245.13 200.35 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1168" y="174" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1207.5" y="191.5">inheritance</text></g><path d="M 1175 505 L 1175 479 L 1545 479 L 1545 505" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 505 L 1175 781 L 1545 781 L 1545 505" fill="#ffffff" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 505 L 1545 505" fill="none" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1359.5" y="496.5">Class: ScintAbsorber</text></g><rect x="1175" y="505" width="370" height="84" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1179-510-362-84-0)" font-size="12px"><text x="1180.5" y="522.5">                                               Attributes</text><text x="1180.5" y="536.5">- nrows: int</text><text x="1180.5" y="550.5">- ncols: int</text><text x="1180.5" y="564.5">- cellHsize: double</text><text x="1180.5" y="578.5">- cellVsize: double</text></g><rect x="1175" y="589" width="370" height="192" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1179-594-362-192-0)" font-size="12px"><text x="1180.5" y="606.5">                                              Operations</text><text x="1180.5" y="620.5">+ ScintAbsorber()</text><text x="1180.5" y="634.5">+ renderTallyMaterial(j: int): const QString</text><text x="1180.5" y="648.5">+ renderAll(j: int): const QString</text><text x="1180.5" y="662.5">+ static initializeMaterial(&amp;reg: std::vector&lt;materialDisplay&gt;): void</text><text x="1180.5" y="676.5">+ getNrows(): const int</text><text x="1180.5" y="690.5">+ setNrows(value: int): void</text><text x="1180.5" y="704.5">+ getNcols(): const int</text><text x="1180.5" y="718.5">+ setNcols(value: int): void</text><text x="1180.5" y="732.5">+ getCellHsize(): const double</text><text x="1180.5" y="746.5">+ setCellHsize(value: double): void</text><text x="1180.5" y="760.5">+ getCellVsize(): const double</text><text x="1180.5" y="774.5">+ setCellVsize(value: double): void</text></g><path d="M 792 510 L 792 484 L 1157 484 L 1157 510" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 792 510 L 792 594 L 1157 594 L 1157 510" fill="#ffffff" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 792 510 L 1157 510" fill="none" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="974" y="501.5">Class: PmmaAbsorber</text></g><rect x="792" y="510" width="365" height="84" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-796-515-357-84-0)" font-size="12px"><text x="797.5" y="527.5">                                            Operations</text><text x="797.5" y="541.5">+ PmmaAbsorber()</text><text x="797.5" y="555.5">+ renderTallyMaterial(j: int): const QString</text><text x="797.5" y="569.5">+ renderAll(j: int): const QString</text><text x="797.5" y="583.5">+ static initializeMaterial(&amp;reg: std::vector&lt;materialDisplay&gt;): void</text></g><path d="M 1175 844 L 1175 818 L 1545 818 L 1545 844" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 844 L 1175 928 L 1545 928 L 1545 844" fill="#ffffff" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 844 L 1545 844" fill="none" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1359.5" y="835.5">Class: AbsAbsorber</text></g><rect x="1175" y="844" width="370" height="84" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1179-849-362-84-0)" font-size="12px"><text x="1180.5" y="861.5">                                            Operations</text><text x="1180.5" y="875.5">+ AbsAbsorber()</text><text x="1180.5" y="889.5">+ renderTallyMaterial(j: int): const QString</text><text x="1180.5" y="903.5">+ renderAll(j: int): const QString</text><text x="1180.5" y="917.5">+ static initializeMaterial(&amp;reg: std::vector&lt;materialDisplay&gt;): void</text></g><path d="M 1175 994 L 1175 968 L 1540 968 L 1540 994" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 994 L 1175 1078 L 1540 1078 L 1540 994" fill="#ffffff" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 1175 994 L 1540 994" fill="none" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1357" y="985.5">Class: LiquidCaloAbsober</text></g><rect x="1175" y="994" width="365" height="84" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-1179-999-357-84-0)" font-size="12px"><text x="1180.5" y="1011.5">                                            Operations</text><text x="1180.5" y="1025.5">+ LiquidCaloAbsorber()</text><text x="1180.5" y="1039.5">+ renderTallyMaterial(j: int): const QString</text><text x="1180.5" y="1053.5">+ renderAll(j: int): const QString</text><text x="1180.5" y="1067.5">+ static initializeMaterial(&amp;reg: std::vector&lt;materialDisplay&gt;): void</text></g><path d="M 805 694 L 805 668 L 1105 668 L 1105 694" fill="#dae8fc" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 805 694 L 805 774 L 1105 774 L 1105 694" fill="#ffffff" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><path d="M 805 694 L 1105 694" fill="none" stroke="#6c8ebf" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" font-style="italic" text-anchor="middle" font-size="12px"><text x="954.5" y="685.5">Abstract Class: Absorber</text></g><rect x="805" y="694" width="300" height="80" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-809-699-292-80-0)" font-size="12px"><text x="810.5" y="711.5">                                  Attributes</text><text x="810.5" y="725.5">- heigh, width, tickness: double</text><text x="810.5" y="739.5">- xpos, ypos, zpos: double</text><text x="810.5" y="753.5">- tallyIndex: int </text></g><rect x="984" y="627" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1023.5" y="637.5">inheritance</text></g><path d="M 810 453 L 770 453 L 770 1123 L 810 1123" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(360,770,788)" pointer-events="all"/><path d="M 730 788 L 770 788" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(360,770,788)" pointer-events="all"/><rect x="635" y="775" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="674.5" y="792.5">Factory pattern</text></g><path d="M 1335.71 339.43 L 1335.7 380 Q 1335.69 390 1325.69 390 L 994.77 390 Q 984.77 390 984.76 400 L 984.72 478.79" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1335.71 324.43 L 1340.12 331.94 L 1335.71 339.43 L 1331.3 331.93 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 978.23 466.91 L 984.72 479.91 L 991.23 466.92" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 344px; margin-left: 1353px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1353" y="344" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 1360 339.99 L 1360 415.08 Q 1360 425.08 1360 435.08 L 1360 476.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1360 324.99 L 1364.41 332.49 L 1360 339.99 L 1355.59 332.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1353.5 464.88 L 1360 477.88 L 1366.5 464.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 329px; margin-left: 1377px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1377" y="329" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><rect x="1251" y="354.25" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1290.5" y="371.75">composition</text></g><path d="M 974 595 L 974 609.85 Q 974 619.85 974.09 629.85 L 974.28 649.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 974.4 662.88 L 967.78 649.94 L 980.78 649.82 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 592px; margin-left: 979px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="979" y="592" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 1172 887.41 L 1151.85 887.39 Q 1141.85 887.38 1133.98 887.39 L 1126.12 887.4" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1113.12 887.41 L 1126.11 880.9 L 1126.12 893.9 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 887px; margin-left: 1174px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1174" y="887" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 1405.01 339.99 L 1405.07 404 Q 1405.08 414 1415.08 414 L 1575.08 414 Q 1585.08 414 1585.08 424 L 1585.08 871.85 Q 1585.08 881.85 1575.08 881.83 L 1547.61 881.8" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1405 324.99 L 1409.42 332.48 L 1405.01 339.99 L 1400.6 332.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1559.5 875.32 L 1546.49 881.8 L 1559.48 888.32" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 356px; margin-left: 1422px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1422" y="356" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 1445.02 339.99 L 1445.06 364 Q 1445.08 374 1455.08 374 L 1615.08 374 Q 1625.08 374 1625.08 384 L 1625.08 1026 Q 1625.08 1036 1615.08 1036 L 1542.24 1036" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1445 324.99 L 1449.42 332.48 L 1445.02 339.99 L 1440.6 332.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1554.12 1029.5 L 1541.12 1036 L 1554.12 1042.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 366px; margin-left: 1462px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1462" y="366" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 605.99 506 L 705.08 506 Q 715.08 506 715.07 496 L 715 280.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 590.99 506 L 598.49 501.59 L 605.99 506 L 598.49 510.41 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 721.5 292.12 L 715 279.12 L 708.5 292.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 488px; margin-left: 609px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="609" y="488" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 469.5 183.5 L 469.5 234.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(90,469.5,202.5)" pointer-events="all"/><path d="M 461.5 175.5 Q 461.5 183.5 469.5 183.5 Q 477.5 183.5 477.5 175.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(90,469.5,202.5)" pointer-events="all"/><rect x="494.5" y="189.5" width="26" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="507" y="207">Qt</text></g><path d="M 1169 1034.47 L 1148.77 1034.46 Q 1138.77 1034.46 1130.94 1034.46 L 1123.12 1034.47" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1110.12 1034.47 L 1123.12 1027.97 L 1123.12 1040.97 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 1034px; margin-left: 1171px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1171" y="1034" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><path d="M 1170 720.06 L 1149.85 720.12 Q 1139.85 720.15 1131.98 720.13 L 1124.12 720.1" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1111.12 720.06 L 1124.14 713.6 L 1124.1 726.6 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 720px; margin-left: 1172px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 11px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;"><div><br /></div><div><br /></div></div></div></div></foreignObject><text x="1172" y="720" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="11px">&#xa;</text></switch></g><rect x="255" y="255" width="81" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="295" y="272.5">composition</text></g><path d="M 340 234.99 L 340 321.76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 340 219.99 L 344.41 227.49 L 340 234.99 L 335.59 227.49 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 333.5 309.88 L 340 322.88 L 346.5 309.88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="635" y="360" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="674.5" y="377.5">composition</text></g><path d="M 100 454 L 100 511" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(270,100,476)" pointer-events="all"/><path d="M 92 446 Q 92 454 100 454 Q 108 454 108 446" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(270,100,476)" pointer-events="all"/><rect x="0" y="463" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="39.5" y="480.5">GEANT4</text></g><path d="M 100 414 L 100 471" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(270,100,436)" pointer-events="all"/><path d="M 92 406 Q 92 414 100 414 Q 108 414 108 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" transform="rotate(270,100,436)" pointer-events="all"/><rect x="15" y="423" width="56" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="42.5" y="440.5">TH1D</text></g><path d="M 30 32 L 30 6 L 350 6 L 350 32" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 30 32 L 30 116 L 350 116 L 350 32" fill="#ffffff" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 30 32 L 350 32" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="189.5" y="23.5">Class: Ions</text></g><rect x="30" y="32" width="320" height="34" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-34-37-312-34-0)" font-size="12px"><text x="35.5" y="49.5">                                     Attributes</text><text x="35.5" y="63.5">- Ions()</text></g><path d="M 30 70 L 350 70" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="30" y="74" width="320" height="42" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-34-79-312-42-0)" font-size="12px"><text x="35.5" y="91.5">                                    Operations</text><text x="35.5" y="105.5">+ initializeAllIons(&amp;id: std::vector&lt;ionDisplay&gt;): static void</text></g><path d="M 260.01 201.02 L 212 201.07 Q 202 201.08 202 191.08 L 202.04 118.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 275.01 201 L 267.52 205.42 L 260.01 201.02 L 267.51 196.6 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 208.53 130.12 L 202.04 117.12 L 195.53 130.11" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="116" y="153" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="155.5" y="170.5">composition</text></g><rect x="80" y="479" width="45" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="102" y="496.5">cmp</text></g><rect x="85" y="410" width="40" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="104.5" y="427.5">inhr</text></g><rect x="387" y="6" width="880" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="18px"><text x="826.5" y="15.5">Class diagram (part 1) - Object Oriented Frontend for Calorimeter Simulation and Data Analysis</text><text x="826.5" y="37.5">F. Calisto, L. Cane, V. Pagliarino - TCF 2021-2022 - Fisica UniTo</text></g><rect x="805" y="774" width="300" height="312" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" clip-path="url(#mx-clip-809-779-292-312-0)" font-size="12px"><text x="810.5" y="791.5">                                 Operations</text><text x="810.5" y="805.5">+ Absorber()</text><text x="810.5" y="819.5">+ ~Absorber()</text><text x="810.5" y="833.5">+ renderPosition(j: int): const QString</text><text x="810.5" y="847.5">+ renderSize(j: int): const QString</text><text x="810.5" y="861.5">+ virtual renderTallyMaterial(j: int): const QString = 0</text><text x="810.5" y="875.5">+ virtual renderAll(j: int): const QString = 0</text><text x="810.5" y="889.5">+ getHeigh(): const double</text><text x="810.5" y="903.5">+ setHeigh(value: double): void</text><text x="810.5" y="917.5">+ getWidth(): const double</text><text x="810.5" y="931.5">+ setWidth(value: double): void</text><text x="810.5" y="945.5">+ getTickness(): const double</text><text x="810.5" y="959.5">+ setTickness(value: double): void</text><text x="810.5" y="973.5">+ getXpos(): const double</text><text x="810.5" y="987.5">+ setXpos(value: double): void</text><text x="810.5" y="1001.5">+ getYpos(): const double</text><text x="810.5" y="1015.5">+ setYpos(value: double): void</text><text x="810.5" y="1029.5">+ getZpos() const: double</text><text x="810.5" y="1043.5">+ setZpos(value: double): void</text><text x="810.5" y="1057.5">+ getTallyIndex(): const int</text><text x="810.5" y="1071.5">+ setTallyIndex(value: int): void</text></g><rect x="445" y="200" width="40" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="464.5" y="217.5">inhr</text></g><path d="M 277.5 217.5 L 277.5 184.5 L 437.5 184.5 L 437.5 217.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 277.5 217.5 L 437.5 217.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="17px"><text x="357" y="207">Class: gui</text></g><rect x="1125" y="688" width="40" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1144.5" y="705.5">inhr</text></g><rect x="1125" y="860" width="40" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1144.5" y="877.5">inhr</text></g><rect x="1125" y="1006" width="40" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1144.5" y="1023.5">inhr</text></g><rect x="1280" y="405" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1319.5" y="422.5">composition</text></g><rect x="1480" y="345" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1519.5" y="362.5">composition</text></g><rect x="1443.32" y="415" width="80" height="26" fill="none" stroke="none" pointer-events="all"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="1482.82" y="432.5">composition</text></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>